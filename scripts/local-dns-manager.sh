#!/bin/bash
set -euo pipefail

# ========================== CONFIG ==========================
DOMAIN="devops-master.shop"
API_BASE="https://developers.hostinger.com/api/dns/v1"
ZONE_URL="$API_BASE/zones/$DOMAIN"
AUTH_HEADER="Authorization: Bearer $VPS_API_TOKEN"

# ========================== VALIDATE TOKEN ==========================
if [[ -z "${VPS_API_TOKEN:-}" ]]; then
  echo "‚ùå Vari√°vel VPS_API_TOKEN n√£o definida. Execute: source ~/.zshenv"
  exit 1
fi

# ========================== FUNCTIONS ==========================

list_records() {
  echo "üìÑ Listando todos os registros DNS de $DOMAIN..."
  curl -s "$ZONE_URL" --header "$AUTH_HEADER" | \
    jq -r '.[] | "\(.type)\t\(.name)\tTTL=\(.ttl)\t\(.records[0].content)"'
}

search_record() {
  read -rp "üîç Parte do nome do registro que deseja buscar: " RECORD_NAME
  echo "üìÑ Resultado:"
  curl -s "$ZONE_URL" --header "$AUTH_HEADER" | \
    jq -r --arg name "$RECORD_NAME" '.[] | select(.name | test($name; "i")) | "\(.type)\t\(.name)\tTTL=\(.ttl)\t\(.records[0].content)"'
}

update_record() {
  read -rp "‚úèÔ∏è  Nome do registro (ex: app): " NAME
  read -rp "üåê Novo IP (formato A, ex: 168.231.96.100): " NEW_IP
  read -rp "‚è±Ô∏è  TTL (padr√£o: 300): " TTL
  TTL=${TTL:-300}

  echo "‚ôªÔ∏è Atualizando registro $NAME -> $NEW_IP"
  curl -s -X PUT "$ZONE_URL" \
    --header "$AUTH_HEADER" \
    --header "Content-Type: application/json" \
    --data "[
      {
        \"name\": \"$NAME\",
        \"type\": \"A\",
        \"ttl\": $TTL,
        \"records\": [
          {\"content\": \"$NEW_IP\"}
        ]
      }
    ]" | jq
}

delete_record() {
  read -rp "üóëÔ∏è Nome do registro que deseja deletar: " RECORD_NAME

  RECORD_TYPE=$(curl -s "$ZONE_URL" --header "$AUTH_HEADER" | \
    jq -r --arg name "$RECORD_NAME" '.[] | select(.name == $name) | .type')

  if [[ -z "$RECORD_TYPE" || "$RECORD_TYPE" == "null" ]]; then
    echo "‚ùå Registro '$RECORD_NAME' n√£o encontrado."
    return
  fi

  echo "‚ö†Ô∏è Deletando $RECORD_NAME do tipo $RECORD_TYPE..."

  curl -s -X DELETE "$ZONE_URL" \
    --header "$AUTH_HEADER" \
    --header "Content-Type: application/json" \
    --data "{
      \"filters\": [
        {
          \"name\": \"$RECORD_NAME\",
          \"type\": \"$RECORD_TYPE\"
        }
      ]
    }" | jq
}

create_record() {
  echo "üÜï Criar novo registro DNS"

  read -rp "üìõ Nome do novo registro (ex: app, www): " NAME
  read -rp "üìÑ Tipo (A ou CNAME): " TYPE
  TYPE=$(echo "$TYPE" | tr '[:lower:]' '[:upper:]')

  if [[ "$TYPE" != "A" && "$TYPE" != "CNAME" ]]; then
    echo "‚ùå Tipo inv√°lido. Apenas A ou CNAME s√£o suportados."
    return
  fi

  read -rp "üì• Valor do registro (IP ou dom√≠nio): " CONTENT
  read -rp "‚è±Ô∏è TTL (padr√£o: 300): " TTL
  TTL=${TTL:-300}

  # Verifica se j√° existe um registro com mesmo nome e tipo
  EXISTS=$(curl -s "$ZONE_URL" --header "$AUTH_HEADER" | \
    jq -r --arg name "$NAME" --arg type "$TYPE" '.[] | select(.name == $name and .type == $type)')

  if [[ -n "$EXISTS" ]]; then
    echo "‚ùå J√° existe um registro com nome '$NAME' e tipo '$TYPE'."
    return
  fi

  # Monta payload
  JSON_PAYLOAD=$(jq -n \
    --arg name "$NAME" \
    --arg type "$TYPE" \
    --arg content "$CONTENT" \
    --argjson ttl "$TTL" \
    '{overwrite: false, zone: [ { name: $name, type: $type, ttl: $ttl, records: [ {content: $content} ] } ] }'
  )

  echo "üöÄ Criando registro $NAME ($TYPE) ‚Üí $CONTENT..."
  curl -s -X PUT "$ZONE_URL" \
    --header "$AUTH_HEADER" \
    --header "Content-Type: application/json" \
    --data "$JSON_PAYLOAD" | jq
}

# ========================== MENU ==========================

echo "üõ†Ô∏è Gerenciador de DNS - $DOMAIN"
echo ""
select option in \
  "üìÑ Listar todos" \
  "üîç Buscar por nome" \
  "‚ôªÔ∏è Atualizar registro A" \
  "üóëÔ∏è Deletar registro" \
  "‚ûï Criar novo registro" \
  "üö™ Sair"; do

  case $REPLY in
    1) list_records ;;
    2) search_record ;;
    3) update_record ;;
    4) delete_record ;;
    5) create_record ;;
    6) echo "üëã Saindo..."; break ;;
    *) echo "‚ùå Op√ß√£o inv√°lida. Tente novamente." ;;
  esac
  echo ""
done
