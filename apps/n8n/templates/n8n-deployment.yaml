apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.n8n.name }}
  namespace: {{ .Values.n8n.namespace }}
spec:
  replicas: {{ .Values.n8n.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.n8n.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.n8n.name }}
    spec:
      ############################################################
      # 1 ▸ InitContainer: instala os community-nodes no PVC (apenas
      #     se ainda não existirem) — executa antes do n8n subir.
      ############################################################
      initContainers:
        - name: community-nodes-bootstrap
          image: {{ .Values.n8n.image }}      # utiliza a própria imagem do n8n
          command: ["sh", "-c"]
          args:
            - |
              mkdir -p /home/node/.n8n/nodes
              # garante que pnpm esteja pronto
              corepack enable && corepack prepare pnpm@latest --activate
              if [ ! -d /home/node/.n8n/nodes/node_modules ]; then
                echo "[bootstrap] instalando community-nodes…"
                pnpm add --dir /home/node/.n8n/nodes \
                  n8n-nodes-evolution-api n8n-nodes-python
              else
                echo "[bootstrap] nodes já presentes — pulando."
              fi

          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n

      ############################################################
      # 2 ▸ Contêiner principal do n8n
      ############################################################
      containers:
        - name: {{ .Values.n8n.name }}
          image: {{ .Values.n8n.image }}
          imagePullPolicy: {{ .Values.n8n.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.n8n.port }}
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n
          env:
            - name: N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS
              value: "true"
            - name: N8N_RUNNERS_ENABLED
              value: "true"
            - name: N8N_TRUST_PROXY
              value: "true"
            # ------------- configurações gerais -------------
            - name: N8N_BASIC_AUTH_ACTIVE
              value: {{ .Values.n8n.basic.auth_active | quote }}
            - name: N8N_HOST
              value: {{ .Values.n8n.domain_name }}
            - name: N8N_PORT
              value: {{ .Values.n8n.port | quote }}
            - name: N8N_PROTOCOL
              value: {{ .Values.n8n.protocol }}
            - name: WEBHOOK_URL
              value: "{{ .Values.n8n.webhookUrl }}"
            - name: GENERIC_TIMEZONE
              value: {{ .Values.n8n.timezone }}
            - name: N8N_SECURE_COOKIE
              value: {{ .Values.n8n.secure_cookie | quote }}
            # ------------- banco Postgres -------------------
            - name: DB_TYPE
              value: {{ .Values.n8n.postgres.db_type }}
            - name: DB_POSTGRESDB_HOST
              value: {{ .Values.n8n.postgres.host }}
            - name: DB_POSTGRESDB_PORT
              value: {{ .Values.n8n.postgres.port | quote }}
            - name: DB_POSTGRESDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.n8n.secretName }}"
                  key: DB_POSTGRESDB_DATABASE
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.n8n.secretName }}"
                  key: DB_POSTGRESDB_USER
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.n8n.secretName }}"
                  key: DB_POSTGRESDB_PASSWORD
            # ------------- encryption key -------------------
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.n8n.secretName }}"
                  key: N8N_ENCRYPTION_KEY
            # ------------- fila Redis -----------------------
            - name: QUEUE_MODE
              value: {{ .Values.n8n.queue.mode }}
            - name: QUEUE_REDIS_HOST
              value: {{ .Values.n8n.redis.host }}
            - name: QUEUE_REDIS_PORT
              value: {{ .Values.n8n.redis.port | quote }}
            {{- if .Values.n8n.redis.password }}
            - name: QUEUE_REDIS_PASSWORD
              value: {{ .Values.n8n.redis.password }}
            {{- end }}
          resources:
            {{- toYaml .Values.n8n.resources | nindent 12 }}

      ############################################################
      # 3 ▸ Volume que monta o PVC em /home/node/.n8n
      ############################################################
      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: {{ .Values.n8n.pvcName }}
