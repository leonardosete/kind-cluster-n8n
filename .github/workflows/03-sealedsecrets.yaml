name: 03-Generate-SealedSecrets

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "Aplica√ß√£o alvo (n8n, n8n-postgres, evolution-api, ‚Ä¶)"
        required: true
        type: string

  workflow_call:
    inputs:
      app_name:
        required: true
        type: string

jobs:
  seal-and-apply:
    runs-on: [self-hosted, kind]

    env:
      # evolution-api
      EVOLUTION_API_AUTHENTICATION_API_KEY: ${{ secrets.EVOLUTION_API_AUTHENTICATION_API_KEY }}
      EVOLUTION_API_CACHE_REDIS_URI:        ${{ secrets.EVOLUTION_API_CACHE_REDIS_URI }}
      EVOLUTION_API_DATABASE_CONNECTION_URI: ${{ secrets.EVOLUTION_API_DATABASE_CONNECTION_URI }}
      EVOLUTION_API_POSTGRES_DB:            ${{ secrets.EVOLUTION_API_POSTGRES_DB }}
      EVOLUTION_API_POSTGRES_PASSWORD:      ${{ secrets.EVOLUTION_API_POSTGRES_PASSWORD }}
      EVOLUTION_API_POSTGRES_USER:          ${{ secrets.EVOLUTION_API_POSTGRES_USER }}

      # evolution-postgres
      EVOLUTION_POSTGRES_POSTGRES_DB:       ${{ secrets.EVOLUTION_POSTGRES_POSTGRES_DB }}
      EVOLUTION_POSTGRES_POSTGRES_PASSWORD: ${{ secrets.EVOLUTION_POSTGRES_POSTGRES_PASSWORD }}
      EVOLUTION_POSTGRES_POSTGRES_USER:     ${{ secrets.EVOLUTION_POSTGRES_POSTGRES_USER }}

      # n8n-postgres
      N8N_POSTGRES_POSTGRES_DB:             ${{ secrets.N8N_POSTGRES_POSTGRES_DB }}
      N8N_POSTGRES_POSTGRES_PASSWORD:       ${{ secrets.N8N_POSTGRES_POSTGRES_PASSWORD }}
      N8N_POSTGRES_POSTGRES_USER:           ${{ secrets.N8N_POSTGRES_POSTGRES_USER }}

      # n8n (app)
      N8N_DB_POSTGRESDB_DATABASE:           ${{ secrets.N8N_DB_POSTGRESDB_DATABASE }}
      N8N_DB_POSTGRESDB_PASSWORD:           ${{ secrets.N8N_DB_POSTGRESDB_PASSWORD }}
      N8N_DB_POSTGRESDB_USER:               ${{ secrets.N8N_DB_POSTGRESDB_USER }}
      N8N_ENCRYPTION_KEY:                   ${{ secrets.N8N_ENCRYPTION_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: üîß Define caminho do kubeconfig
        run: echo "KUBECONFIG=/root/.kube/config" >> $GITHUB_ENV

      - name: üõ†Ô∏è Garante kubectl & kubeseal
        run: |
          echo "::group::Verificando ferramentas"
          command -v kubectl || {
            echo "üîß Instalando kubectl..."
            curl -sLO "https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          }
          command -v kubeseal || {
            echo "üîß Instalando kubeseal..."
            curl -sSL -o kubeseal \
              https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.24.6/kubeseal-linux-amd64
            chmod +x kubeseal
            sudo mv kubeseal /usr/local/bin/kubeseal
          }
          echo "::endgroup::"

      - name: üîë Define SECRET_KEYS
        run: |
          case "${{ inputs.app_name }}" in
            evolution-api)
              echo "SECRET_KEYS=EVOLUTION_API_AUTHENTICATION_API_KEY,EVOLUTION_API_CACHE_REDIS_URI,EVOLUTION_API_DATABASE_CONNECTION_URI,EVOLUTION_API_POSTGRES_DB,EVOLUTION_API_POSTGRES_PASSWORD,EVOLUTION_API_POSTGRES_USER" >> $GITHUB_ENV ;;
            evolution-postgres)
              echo "SECRET_KEYS=EVOLUTION_POSTGRES_POSTGRES_DB,EVOLUTION_POSTGRES_POSTGRES_PASSWORD,EVOLUTION_POSTGRES_POSTGRES_USER" >> $GITHUB_ENV ;;
            n8n-postgres)
              echo "SECRET_KEYS=N8N_POSTGRES_POSTGRES_DB,N8N_POSTGRES_POSTGRES_PASSWORD,N8N_POSTGRES_POSTGRES_USER" >> $GITHUB_ENV ;;
            n8n)
              echo "SECRET_KEYS=N8N_DB_POSTGRESDB_DATABASE,N8N_DB_POSTGRESDB_PASSWORD,N8N_DB_POSTGRESDB_USER,N8N_ENCRYPTION_KEY" >> $GITHUB_ENV ;;
            *) echo "‚ùå Aplica√ß√£o n√£o suportada"; exit 1 ;;
          esac

      - name: üîê Gera & aplica SealedSecret
        run: |
          echo "::group::Gerando SealedSecret"
          if [[ -z "${SECRET_KEYS:-}" ]]; then
            echo "‚ùå Vari√°vel SECRET_KEYS n√£o foi definida. Verifique o app_name informado."
            exit 1
          fi
          chmod +x scripts/generate-sealedsecret-apps.sh
          scripts/generate-sealedsecret-apps.sh "${{ inputs.app_name }}" n8n-vps
          kubectl apply -f "apps/${{ inputs.app_name }}/templates/sealedsecret-${{ inputs.app_name }}.yaml"
          echo "::endgroup::"
