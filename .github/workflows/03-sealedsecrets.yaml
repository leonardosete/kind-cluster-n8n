name: 03-Generate-SealedSecrets

on:
  workflow_dispatch:
    inputs:
      app_list:
        description: "Aplicações alvo (ex.: evolution-api,evolution-postgres,n8n,n8n-postgres)"
        required: true
        type: string
  workflow_call:
    inputs:
      app_list:
        required: true
        type: string

permissions:
  contents: write

jobs:
  seal-commit-push:
    runs-on: [self-hosted, kind]

    env:
      ##### SEGREDOS ORIGINAIS (Settings → Secrets) #####
      EVOLUTION_API_AUTHENTICATION_API_KEY:  ${{ secrets.EVOLUTION_API_AUTHENTICATION_API_KEY }}
      EVOLUTION_API_CACHE_REDIS_URI:         ${{ secrets.EVOLUTION_API_CACHE_REDIS_URI }}
      EVOLUTION_API_DATABASE_CONNECTION_URI: ${{ secrets.EVOLUTION_API_DATABASE_CONNECTION_URI }}

      EVOLUTION_POSTGRES_POSTGRES_DB:        ${{ secrets.EVOLUTION_POSTGRES_POSTGRES_DB }}
      EVOLUTION_POSTGRES_POSTGRES_PASSWORD:  ${{ secrets.EVOLUTION_POSTGRES_POSTGRES_PASSWORD }}
      EVOLUTION_POSTGRES_POSTGRES_USER:      ${{ secrets.EVOLUTION_POSTGRES_POSTGRES_USER }}

      N8N_POSTGRES_POSTGRES_DB:              ${{ secrets.N8N_POSTGRES_POSTGRES_DB }}
      N8N_POSTGRES_POSTGRES_PASSWORD:        ${{ secrets.N8N_POSTGRES_POSTGRES_PASSWORD }}
      N8N_POSTGRES_POSTGRES_USER:            ${{ secrets.N8N_POSTGRES_POSTGRES_USER }}

      N8N_ENCRYPTION_KEY:                    ${{ secrets.N8N_ENCRYPTION_KEY }}

      ##### ALIAS (compatibilidade evolution-api) #####
      AUTHENTICATION_API_KEY:  ${{ secrets.EVOLUTION_API_AUTHENTICATION_API_KEY }}
      CACHE_REDIS_URI:         ${{ secrets.EVOLUTION_API_CACHE_REDIS_URI }}
      DATABASE_CONNECTION_URI: ${{ secrets.EVOLUTION_API_DATABASE_CONNECTION_URI }}

    steps:
      - uses: actions/checkout@v4

      - name: 📌 Define KUBECONFIG
        run: echo "KUBECONFIG=/root/.kube/config" >> "$GITHUB_ENV"

      - name: 🛠️ Instala kubectl & kubeseal (se ausentes)
        run: |
          command -v kubectl  || { curl -sLO "https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"; chmod +x kubectl && sudo mv kubectl /usr/local/bin/; }
          command -v kubeseal || { curl -sSL -o kubeseal https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.24.6/kubeseal-linux-amd64; chmod +x kubeseal && sudo mv kubeseal /usr/local/bin/kubeseal; }

      - name: ⏳ Aguarda controller sealed-secrets ficar pronto
        run: |
          kubectl wait pod -n kube-system -l app.kubernetes.io/name=sealed-secrets \
            --for=condition=Ready --timeout=60s

      - name: 🔐 Gera SealedSecrets (sem aplicar)
        run: |
          chmod +x scripts/wk-create-sealedsecret-apps.sh
          scripts/wk-create-sealedsecret-apps.sh "${{ inputs.app_list }}" n8n-vps

      - name: 🔍 Verifica se houve alterações
        id: diff
        run: |
          if git status --porcelain | grep -q 'sealedsecret-'; then
            echo "changed=true"  >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: 🔐 Configura Git com PAT (push seguro)
        if: steps.diff.outputs.changed == 'true'
        run: |
          git config user.name  "bot-sealedsecret"
          git config user.email "bot@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}

      - name: 📝 Commit das alterações
        if: steps.diff.outputs.changed == 'true'
        run: |
          git add apps/*/templates/sealedsecret-*.yaml
          git commit -m "ci: update sealed secrets [skip ci]"

      - name: 🚀 Pull --rebase + Push
        if: steps.diff.outputs.changed == 'true'
        run: |
          git pull origin main --rebase
          git push origin main
