################################################################################
# 02 – Deploy Infra-Base: cert-manager + ArgoCD + Sealed-Secrets               #
################################################################################
name: 02-Deploy-Infra-Base

on:
  workflow_dispatch:
    inputs:
      criar_infra_base:
        description: "Executar deploy da infraestrutura base?"
        type: boolean
        default: false
        required: true

  workflow_call:
    inputs:
      criar_infra_base:
        type: boolean
        required: true

permissions:
  contents: write

jobs:
  # 1 ▸ Instala infra base -----------------------------------------------------
  deploy-infra:
    if: ${{ inputs.criar_infra_base }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: 🛠️ Dependências (Ansible, kubectl, ssh)
        run: |
          echo "::group::Instalando dependências"
          sudo apt-get update -y
          sudo apt-get install -y ansible sshpass openssh-client curl
          curl -sLO "https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          echo "::endgroup::"

      - name: 🔐 Chave SSH
        run: |
          echo "::group::Configurando SSH"
          install -d -m 0700 ~/.ssh
          printf '%s' '${{ secrets.SSH_PRIVATE_KEY }}' > ~/.ssh/${{ secrets.SSH_KEY_FILENAME }}
          chmod 600 ~/.ssh/${{ secrets.SSH_KEY_FILENAME }}
          ssh-keyscan -H ${{ secrets.VPS_HOSTNAME }} >> ~/.ssh/known_hosts
          echo "::endgroup::"

      - name: 🔍 Valida chave no runner
        run: ssh-keygen -y -f ~/.ssh/${{ secrets.SSH_KEY_FILENAME }} >/dev/null

      - name: 🚀 Playbook infra-base
        working-directory: ./ansible-hostinger
        run: |
          echo "::group::Executando playbook infra-base"
          ansible-playbook -i inventory.ini 02-ansible-infra-base.yml
          echo "::endgroup::"

  # 2 ▸ Gera & commita SealedSecrets via workflow-03 (um app por vez) ---------
  generate-secrets:
    needs: deploy-infra
    strategy:
      max-parallel: 1  # Evita conflitos de git push simultâneo
      matrix:
        app: [evolution-api, evolution-postgres, n8n-postgres, n8n]
    uses: ./.github/workflows/03-sealedsecrets.yaml
    with:
      app_list: ${{ matrix.app }}
    secrets: inherit

  # 3 ▸ Aplica aplicações no ArgoCD via workflow-04 ---------------------------
  deploy-apps:
    needs: generate-secrets
    uses: ./.github/workflows/04-deploy-n8n.yaml
    secrets: inherit
