name: Deploy => Cert-Manager+Lets_Encrypt+ArgoCD => Cluster KIND

on:
  workflow_dispatch:
    inputs:
      criar_infra_base:
        description: "⚠️ Executar o deploy da infraestrutura base?⚠️"
        required: true
        default: false
        type: boolean

jobs:
  deploy-infra:
    if: ${{ github.event.inputs.criar_infra_base }}
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout do repositório
      uses: actions/checkout@v3

    - name: 🔧 Instala dependências (Ansible + kubectl)
      run: |
        echo "::group::🛠️ Instalando dependências"
        sudo apt-get update
        sudo apt-get install -y ansible sshpass openssh-client curl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        echo "::endgroup::"

    - name: 🔐 Configura chave SSH da VPS
      run: |
        echo "::group::🔐 Adicionando chave SSH"
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/${{ vars.SSH_KEY_FILENAME }}
        chmod 600 ~/.ssh/${{ vars.SSH_KEY_FILENAME }}
        ssh-keyscan -H ${{ vars.VPS_HOSTNAME }} >> ~/.ssh/known_hosts
        echo "✅ Chave SSH configurada"
        echo "::endgroup::"

    - name: ⚙️ Executa o playbook de infraestrutura base
      working-directory: ./ansible-hostinger
      run: |
        echo "::group::🚀 Deploy da infraestrutura base no cluster KIND"
        ansible-playbook -i inventory.ini ansible-infra-base.yml
        echo "::endgroup::"

    - name: ✅ ⚠️ IMPORTANTE ⚠️ ✅
      run: |
        echo ""
        echo "====================== ✅ INFRA BASE PRONTA ======================"
        echo ""
        echo "Cert-manager e ArgoCD instalados com sucesso!"
        echo ""
        echo "🌐 URL: https://argocd-test.devops-master.shop"
        echo "👤 Usuário: admin"
        echo "🔐 Para descobrir a senha do usuário admin, execute no servidor:"
        echo ""
        echo "kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d && echo"
        echo ""
        echo "✅ Você pode acessar o ArgoCD agora e fazer o login"
        echo ""
        echo "==============================================================="


